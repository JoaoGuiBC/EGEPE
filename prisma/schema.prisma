generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id String @id @default(cuid())

  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Session {
  id String @id @default(cuid())

  session_token String   @unique
  user_id       String
  expires       DateTime

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id String @id @default(uuid())

  name     String
  email    String  @unique
  document String  @unique
  phone    String
  image    String?

  is_public_agent Boolean
  office          String?

  address      String
  neighborhood String
  city         String

  have_visual_impairment  Boolean @default(false)
  have_hearing_impairment Boolean @default(false)
  has_physical_disability Boolean @default(false)

  is_admin Boolean @default(false)

  created_at DateTime @default(now())

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
