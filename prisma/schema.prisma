generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  name          String?
  email         String?   @unique
  emailVerified DateTime?
  document      String?   @unique
  phone         String?
  image         String?

  is_public_agent Boolean?
  office          String?

  address      String?
  neighborhood String?
  city         String?

  have_visual_impairment  Boolean @default(false)
  have_hearing_impairment Boolean @default(false)
  has_physical_disability Boolean @default(false)

  is_admin Boolean @default(false)

  created_at DateTime @default(now())

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model Account {
  id String @id @default(cuid())

  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(cuid())

  sessionToken String   @unique
  expires      DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Course {
  id String @id @default(cuid())

  title           String
  target_audience String
  objective       String
  observations    String
  content         String
  image           String?

  created_at DateTime @default(now())

  courses_ministers CourseMinister[]

  @@map("courses")
}

model Minister {
  id String @id @default(cuid())

  name          String @unique
  qualification String

  created_at DateTime @default(now())

  courses_ministers CourseMinister[]

  @@map("ministers")
}

model CourseMinister {
  id String @id @default(cuid())

  minister_id String?
  course_id   String?

  minister Minister? @relation(fields: [minister_id], references: [id])
  course   Course?   @relation(fields: [course_id], references: [id])

  @@unique([minister_id, course_id])
  @@map("course_minister")
}
